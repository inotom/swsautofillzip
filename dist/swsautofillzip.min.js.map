{"version":3,"sources":["0"],"names":["global","ZIP_RE","addEventListener","elZipField","document","getElementById","elSearchButton","elPrefecture","elCity","elAddress","elHalfAddress","elFullAddress","elMessage","disableSearchButton","setAttribute","enableSearchButton","removeAttribute","warn","msg","textContent","fillValue","el","value","json","console","error","status","message","results","length","result","doSearch","zipCode","match","elCallbackScript","body","removeChild","script","createElement","src","id","appendChild","isCorrectZipCode","e","preventDefault","this"],"mappings":";CAWA,SAAUA,GACR,aAEA,IACIC,EAAU,iBAGdD,EAAOE,iBAAiB,mBAAoB,WAG1C,IAAIC,EAAaC,SAASC,eAAe,0BAErCC,EAAiBF,SAASC,eAAe,yBACzCE,EAAeH,SAASC,eAAe,6BACvCG,EAASJ,SAASC,eAAe,uBACjCI,EAAYL,SAASC,eAAe,0BACpCK,EAAgBN,SAASC,eAAe,+BACxCM,EAAgBP,SAASC,eAAe,+BACxCO,EAAYR,SAASC,eAAe,0BAOpCQ,EAAsB,WACpBP,GACFA,EAAeQ,aAAa,WAAY,aASxCC,EAAqB,WACnBT,GACFA,EAAeU,gBAAgB,aAU/BC,EAAO,SAASC,GACdN,IACFA,EAAUO,YAAcD,IAWxBE,EAAY,SAASC,EAAIC,GACvBD,IACFA,EAAGC,MAAQA,IAKVtB,EAAoB,yBACvBA,EAAoB,uBAAI,SAASuB,GAE/B,GADAN,EAAK,KACAM,EAGH,OAFAN,EAAK,kBACLO,QAAQC,MAAM,aAGhB,GAAoB,MAAhBF,EAAKG,OAGP,OAFAT,EAAKM,EAAKI,cACVH,QAAQC,MAAMF,EAAKI,SAGrB,GAAKJ,EAAKK,SAAmC,IAAxBL,EAAKK,QAAQC,OAAlC,CAIA,IAAIC,EAASP,EAAKK,QAAQ,GAC1BR,EAAUb,EAAcuB,EAAiB,UACzCV,EAAUZ,EAAQsB,EAAiB,UACnCV,EAAUX,EAAWqB,EAAiB,UACtCV,EAAUV,EAAeoB,EAAiB,SAAIA,EAAiB,UAC/DV,EAAUT,EAAemB,EAAiB,SAAIA,EAAiB,SAAIA,EAAiB,eARlFb,EAAK,4BAkBX,IAAIc,EAAW,SAASC,GACtB,GAAIA,EAAQC,MAAMhC,GAAS,CACzB,IAAIiC,EAAmB9B,SAASC,eAAe,kCAC3C6B,GACF9B,SAAS+B,KAAKC,YAAYF,GAE5B,IAAIG,EAASjC,SAASkC,cAAc,UACpCD,EAAOE,IAxGC,mDAwGeP,EAAU,mCACjCK,EAAOG,GAAK,iCACZpC,SAAS+B,KAAKM,YAAYJ,KAI1BlC,IAGFU,IAGAV,EAAWD,iBAAiB,QAAS,WACnC,IAAI8B,EAAU7B,EAAWmB,MACrBoB,EAAmBV,EAAQC,MAAMhC,GAGjCK,EAEEoC,EACF3B,IAEAF,IAIE6B,GACFX,EAASC,KAGZ,GAGC1B,GACFA,EAAeJ,iBAAiB,QAAS,SAASyC,GAChDA,EAAEC,iBACFb,EAAS5B,EAAWmB,SACnB,MAGN,IACFuB","file":"swsautofillzip.min.js","sourcesContent":["/*! @license swsautofillzip.js v1.1.0 | (c) 2017 http://www.serendip.ws/ | MIT License */ /**********************************************************************************\n  swsautofillzip.js\n\n  file created in 2017/06/17 18:21:08.\n\n  MIT License\n\n  Copyright (c) 2017 iNo (http://www.serendip.ws/)\n\n *********************************************************************************/\n\n(function(global) {\n  'use strict';\n\n  var API_URI = 'http://zipcloud.ibsnet.co.jp/api/search?zipcode=';\n  var ZIP_RE  = /^\\d{3}-?\\d{4}$/;\n  var CALLBACK_NAME = 'swsAutofillzipCallback';\n\n  global.addEventListener('DOMContentLoaded', function() {\n\n    // required elements\n    var elZipField = document.getElementById('swsautofillzip-zipcode');\n    // optional elements\n    var elSearchButton = document.getElementById('swsautofillzip-search');\n    var elPrefecture = document.getElementById('swsautofillzip-prefecture');\n    var elCity = document.getElementById('swsautofillzip-city');\n    var elAddress = document.getElementById('swsautofillzip-address');\n    var elHalfAddress = document.getElementById('swsautofillzip-half-address');\n    var elFullAddress = document.getElementById('swsautofillzip-full-address');\n    var elMessage = document.getElementById('swsautofillzip-message');\n\n    /**\n     * 検索ボタンを無効化する\n     *\n     * @returns {undefined}\n     */\n    var disableSearchButton = function() {\n      if (elSearchButton) {\n        elSearchButton.setAttribute('disabled', 'disabled');\n      }\n    };\n\n    /**\n     * 検索ボタンを有効化する\n     *\n     * @returns {undefined}\n     */\n    var enableSearchButton = function() {\n      if (elSearchButton) {\n        elSearchButton.removeAttribute('disabled');\n      }\n    };\n\n    /**\n     * メッセージ表示要素が存在する場合、メッセージを表示する\n     *\n     * @param {string} msg メッセージ文字列.\n     * @returns {undefined}\n     */\n    var warn = function(msg) {\n      if (elMessage) {\n        elMessage.textContent = msg;\n      }\n    };\n\n    /**\n     * 入力要素に値をセットする\n     *\n     * @param {Element|null} el 入力要素.\n     * @param {string} value 入力文字列.\n     * @returns {undefined}\n     */\n    var fillValue = function(el, value) {\n      if (el) {\n        el.value = value;\n      }\n    };\n\n    // JSONP のコールバック関数を定義する\n    if (!global[CALLBACK_NAME]) {\n      global[CALLBACK_NAME] = function(json) {\n        warn('');\n        if (!json) {\n          warn('通信に失敗しました');\n          console.error('通信に失敗しました');\n          return;\n        }\n        if (json.status !== 200) {\n          warn(json.message);\n          console.error(json.message);\n          return;\n        }\n        if (!json.results || json.results.length === 0) {\n          warn('郵便番号検索による住所は見つかりませんでした');\n          return;\n        }\n        var result = json.results[0];\n        fillValue(elPrefecture, result['address1']);\n        fillValue(elCity, result['address2']);\n        fillValue(elAddress, result['address3']);\n        fillValue(elHalfAddress, result['address2'] + result['address3']);\n        fillValue(elFullAddress, result['address1'] + result['address2'] + result['address3']);\n      };\n    }\n\n    /**\n     * 郵便番号から住所検索実行\n     *\n     * @param {String} zipCode 郵便番号.\n     * @returns {undefined}\n     */\n    var doSearch = function(zipCode) {\n      if (zipCode.match(ZIP_RE)) {\n        var elCallbackScript = document.getElementById('swsautofillzip-callback-script');\n        if (elCallbackScript) {\n          document.body.removeChild(elCallbackScript);\n        }\n        var script = document.createElement('script');\n        script.src = API_URI + zipCode + '&callback=' + CALLBACK_NAME;\n        script.id = 'swsautofillzip-callback-script';\n        document.body.appendChild(script);\n      }\n    };\n\n    if (elZipField) {\n\n      // 検索ボタンの状態を初期化(無効化)\n      disableSearchButton();\n\n      // 郵便番号入力値をチェックする\n      elZipField.addEventListener('keyup', function() {\n        var zipCode = elZipField.value;\n        var isCorrectZipCode = zipCode.match(ZIP_RE);\n\n        // 検索ボタンが有る場合\n        if (elSearchButton) {\n          // 正しい郵便番号が入力されていた場合、検索ボタンを有効化する\n          if (isCorrectZipCode) {\n            enableSearchButton();\n          } else {\n            disableSearchButton();\n          }\n        } else { // 検索ボタンが無い場合\n          // 正しい郵便番号が入力されていた場合、検索を実行する\n          if (isCorrectZipCode) {\n            doSearch(zipCode);\n          }\n        }\n      }, false);\n\n      // 検索ボタンクリックで検索を実行する\n      if (elSearchButton) {\n        elSearchButton.addEventListener('click', function(e) {\n          e.preventDefault();\n          doSearch(elZipField.value);\n        }, false);\n      }\n    }\n  }, false);\n})(this);\n"]}